{"version":3,"sources":["app/core.cljs"],"mappings":"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","names":["app.core/route->component","app.chunks/Home","app.chunks/About","app.chunks/Admin","app.chunks/Login","f__43724__auto__","js/goog.DEBUG","temp__5825__auto__","app.core/app-root","f__43648__auto__","*current-component*-orig-val__52760","uix.core/*current-component*","*current-component*-temp-val__52761","uix.core/set-display-name","js/window","js/window.uix","js/window.uix.dev","sig__43657__auto__","js/window.uix.dev.signature!","js/window.uix.dev.register!","vec__52752","cljs.core.nth","vec__52755","route","set-route","cljs.core/deref","uix.core/use-state","app.router/current","authed","set-authed","app.auth/authed?","uix.hooks.alpha.use_effect","uix.hooks.alpha/use-clj-deps","app.auth/load!","app.router/start!","_","cljs.core/add-watch","v","app.auth/state","G__52759","cljs.core/remove-watch","app.router/stop!","name","cljs.core.get_in","requires-auth?","unauthorized?","cljs.core/not","Page","cljs.core.get","app.auth/set-redirect!","app.router/navigate!","js/undefined","uix.compiler.aot/>el","uix.compiler.aot/fragment","uix.compiler.attributes/interpret-attrs","uix.compiler.alpha/component-element","app.components.navbar/navbar","js/app","js/app.core","js/app.core.root*","app.core/root*","cljs.core.atom","app.core/ensure-root!","el","js/document.getElementById","js/console.log","cljs.core/reset!","uix.dom.create_root","app.core/mount!","root","uix.dom/render-root","uix.core/strict-mode","app.core/render","app.core/init","e52762"],"sourcesContent":["(ns app.core\n  (:require\n   [app.auth :as auth]\n   [app.chunks :as chunks]\n   [app.components.navbar :as navbar]\n   [app.components.spinner :as spinner]\n   [app.router :as router]\n   [\"react\" :as react]\n   [uix.core :refer [$ defui] :as uix]\n   [uix.dom :as dom]\n   [uix.preload]))\n\n(def route->component\n  {:home chunks/Home\n   :about chunks/About\n   :admin chunks/Admin\n   :login chunks/Login})\n\n(defui app-root []\n  (let [[route set-route] (uix.core/use-state @router/current)\n        [authed set-authed] (uix.core/use-state (auth/authed?))]\n    (uix.core/use-effect\n      (fn []\n        (auth/load!)\n        (router/start!)\n        (let [_ (add-watch router/current ::root (fn [_ _ _ v] (set-route v)))\n              _ (add-watch auth/state ::auth (fn [_ _ _ _] (set-authed (auth/authed?))))]\n          (fn []\n            (remove-watch router/current ::root)\n            (remove-watch auth/state ::auth)\n            (router/stop!))))\n      [])\n    (let [name (get-in route [:data :name])\n          requires-auth? (true? (get-in route [:data :requires-auth]))\n          unauthorized? (and requires-auth? (not authed))\n          Page (get route->component name chunks/Home)]\n      (uix.core/use-effect\n        (fn []\n          (when unauthorized?\n            (auth/set-redirect! {:name name\n                                 :params (:path-params route)\n                                 :query (:query-params route)})\n            (router/navigate! :login))\n          js/undefined)\n        [route unauthorized? name])\n      ($ :<>\n         ($ navbar/navbar)\n         ($ :main {:className \"container py-6\"}\n            ($ Page))))))\n\n(defonce root* (atom nil))\n\n(defn- ensure-root! []\n  (when (nil? @root*)\n    (when-let [el (js/document.getElementById \"app\")]\n      (js/console.log \"[app] creating root @ #app\")\n      (reset! root* (uix.dom/create-root el))))\n  @root*)\n\n\n(defn mount! []\n  (when-let [root (ensure-root!)]\n    (js/console.log \"[app] mount! rendering\")\n    (uix.dom/render-root\n     ($ uix/strict-mode\n        ($ app-root))\n     root)))\n\n(defn render []\n  (mount!))\n\n\n(defn ^:export init []\n  (js/console.log \"[app] init called\")\n  (router/start!)\n  (render))\n\n;; Ensure initial mount even if :init-fn hook isn't triggered.\n(try\n  (init)\n  (catch :default _))\n"]}