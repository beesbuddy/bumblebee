{"version":3,"sources":["bumblebee/ui/api.cljs"],"mappings":";;AAIA,GAAA,QAAAA,sCAAAC,yCAAAC,6CAAAC;AAAA;AAAA,AAAA,AAASC,0BACP,iBAAAC,WAAM,wDAAA,xDAACC;AAAP,AAAA,AAAAD,kCAEI,WAAKE;AAAL,AACE,IAAAC,2BAAa,AAAA,sFAAA,AAAAE,gBAASC;AAAtB,AAAA,oBAAAH;AAAA,AAAA,cAAAA,VAAWC;AAAX,AACE,CAAM,AAAA,AAAIF,+BAAgC,CAAA,sDAAe,AAAA,uFAASE;;AADpE;;AAEAF;;;AALNF;;;AAOF,4BAAA,5BAAMO,gEAAUC;AAAhB,AACE,OAAO,AAAMT,4BAAOS,UAAK,WAAKC;AAAL,AAAW,OAAQA","names":["js/bumblebee","js/bumblebee.ui","js/bumblebee.ui.api","js/bumblebee.ui.api.client","bumblebee.ui.api/client","G__31182","js/module$node_modules$axios$dist$browser$axios_cjs.create","config","temp__5825__auto__","t","cljs.core/deref","bumblebee.ui.auth/state","bumblebee.ui.api/get-json","url","resp"],"sourcesContent":["(ns bumblebee.ui.api\n  (:require [\"axios\" :as axios]\n            [bumblebee.ui.auth :as auth]))\n\n(defonce client\n  (doto (axios/create #js {})\n    (.interceptors.request.use\n      (fn [config]\n        (when-let [t (:token @auth/state)]\n          (set! (.. config -headers -Authorization) (str \"Bearer \" (:access t))))\n        config))))\n\n(defn get-json [url]\n  (.then (.get client url) (fn [resp] (.-data resp))))\n"]}